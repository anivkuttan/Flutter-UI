import 'package:flutter/material.dart';
import 'package:math_expressions/math_expressions.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: MyWidget(),
    );
  }
}

class MyWidget extends StatefulWidget {
  @override
  _MyWidgetState createState() => _MyWidgetState();
}

class _MyWidgetState extends State<MyWidget> {
  final List<String> items = <String>[
    "Del",
    "AC",
    "%",
    "/",
    "7",
    "8",
    "9",
    "x",
    "4",
    "5",
    "6",
    "-",
    "1",
    "2",
    "3",
    "+",
    ".",
    "0",
    "00",
    "Ans",
  ];
  String questionText = '';
  String resultText = '';

  buttonClicked(String btnText) {
    setState(() {
      if (btnText == 'Del') {
        questionText = questionText.substring(0, questionText.length - 1);
      } else if (btnText == 'AC') {
        questionText = '';
        resultText = '';
      } else if (btnText == 'Ans') {
        questionText = questionText.replaceAll('x', '*');
        Parser p = Parser();
        Expression question = p.parse(questionText);
        ContextModel cm = ContextModel();
        resultText = '${question.evaluate(EvaluationType.REAL, cm)}';
      } else {
        questionText += btnText;
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    // Size size = MediaQuery. of(context).size;
    return Scaffold(
        backgroundColor: Colors.deepPurple[100],
        body: Center(
            child: Column(children: [
          Expanded(
            flex: 2,
            child: Container(
                alignment: Alignment.bottomRight,
                color: Colors.purple[200],
                child:
                    Column(mainAxisAlignment: MainAxisAlignment.end, children: [
                  Text(questionText,
                      style: TextStyle(
                        fontSize: 35,
                        color: Colors.black,
                      ),
                      textAlign: TextAlign.end), //topText
                  SizedBox(height: 50),
                  Text(resultText,
                      style: TextStyle(
                        fontSize: 40,
                      ),
                      textAlign: TextAlign.start),
                ]) //colum
                ), //container
          ), //text Expaned
          Expanded(
            flex: 6,
            child: Container(
              //color: Colors.deepPurple,
              child: GridView.builder(
                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                    crossAxisCount: 4),
                itemCount: items.length,
                itemBuilder: (context, indext) {
                  if (indext == 0) {
                    return MyButton(
                        buttonText: items[indext],
                        buttonColor: Colors.red,
                        // to make function like
                        // buttonClicked :(){}
                        // then inside put your function
                        //like bellow
                        buttonClicked: () {
                          buttonClicked(items[indext]);
                        });
                  } else if (indext == 1) {
                    return MyButton(
                        buttonText: items[indext],
                        buttonColor: Colors.green,
                        buttonClicked: () {
                          buttonClicked(items[indext]);
                        });
                  } else if (indext == 2 ||
                      indext == 3 ||
                      indext == 7 ||
                      indext == 11 ||
                      indext == 15) {
                    return MyButton(
                        buttonText: items[indext],
                        buttonColor: Colors.deepOrange[300],
                        buttonClicked: () {
                          buttonClicked(items[indext]);
                        });
                  }
                  return MyButton(
                      buttonText: items[indext],
                      buttonColor: Colors.deepPurple,
                      buttonClicked: () {
                        buttonClicked(items[indext]);
                      });
                }, //builder
              ), //contai er
            ), //expanded
          ),
        ]) //column
            ) //center
        );
  }
}

class MyButton extends StatelessWidget {
  MyButton({this.buttonText, this.buttonColor, this.buttonClicked});
  final String buttonText;
  final Color buttonColor;
  final buttonClicked;

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: EdgeInsets.all(6),
      child: ElevatedButton(
        onPressed: buttonClicked,
        child: Text(buttonText),
        style: ElevatedButton.styleFrom(
          primary: buttonColor,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10),
          ),
        ), //style
      ), //button
    );
  }
}
